name: Podcast Tracker

on:
  schedule:
    # Run every day at midnight UTC
    - cron: '0 0 * * *'
  
  # Allow manual triggering
  workflow_dispatch:
    inputs:
      hours:
        description: 'Hours to look back for new episodes'
        required: true
        default: '168'
        type: choice
        options:
          - '24'
          - '48'
          - '72'
          - '168'
      send_email:
        description: 'Send email update'
        required: false
        default: true
        type: boolean

permissions:
  contents: write
  actions: read

jobs:
  check_podcasts:
    runs-on: ubuntu-latest
    timeout-minutes: 10  # Add a timeout for the entire job
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Run podcast tracker
        timeout-minutes: 5  # Add a timeout for this specific step
        env:
          EMAIL_ADDRESS: ${{ secrets.EMAIL_ADDRESS }}
          EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
        run: |
          # Use input hours if workflow was manually triggered, otherwise use default (168)
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            HOURS="${{ github.event.inputs.hours }}"
            SEND_EMAIL="${{ github.event.inputs.send_email }}"
          else
            HOURS="168"
            SEND_EMAIL="true"
          fi
          
          echo "Looking for podcast episodes in the last $HOURS hours..."
          
          # Build command with email option if requested
          CMD="python podcast_tracker.py --hours $HOURS --max-episodes 3"
          if [ "$SEND_EMAIL" == "true" ]; then
            CMD="$CMD --email"
            echo "Email updates enabled"
          else
            echo "Email updates disabled"
          fi
          
          # Run the command
          $CMD
          
          # Display summary of found episodes
          if [ -f recent_episodes.json ]; then
            echo "Found episodes:"
            python -c "import json; data = json.load(open('recent_episodes.json')); print(f'Total episodes: {len(data)}'); [print(f'- {e[\"podcast_name\"]}: {e[\"episode_title\"]}') for e in data[:5]]; print('...') if len(data) > 5 else None"
          fi
      
      - name: Upload results as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: podcast-episodes
          path: |
            recent_episodes.json
            podcast_tracker.log
          retention-days: 7
      
      - name: Commit and push changes
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "GitHub Actions"
          
          # Add changes to git
          git add recent_episodes.json podcast_tracker.log
          
          # Check if there are changes to commit
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update podcast episodes [skip ci]"
            git push
          fi 